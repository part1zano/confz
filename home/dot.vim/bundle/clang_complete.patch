diff --git a/plugin/clang_complete.vim b/plugin/clang_complete.vim
index 5302329..afd331c 100644
--- a/plugin/clang_complete.vim
+++ b/plugin/clang_complete.vim
@@ -482,13 +482,13 @@ function! ClangComplete(findstart, base)
     execute s:py_cmd "timer.registerEvent('Load into vimscript')"
 
     if g:clang_make_default_keymappings == 1
-      if s:use_maparg
-        let s:old_cr = maparg('<CR>', 'i', 0, 1)
-      else
-        let s:old_snr = matchstr(maparg('<CR>', 'i'), '<SNR>\d\+_')
-      endif
+      " if s:use_maparg
+        " let s:old_cr = maparg('<CR>', 'i', 1, 0)
+      " else
+      "   let s:old_snr = matchstr(maparg('<CR>', 'i'), '<SNR>\d\+_')
+      " endif
       inoremap <expr> <buffer> <C-Y> <SID>HandlePossibleSelectionCtrlY()
-      inoremap <expr> <buffer> <CR> <SID>HandlePossibleSelectionEnter()
+      " inoremap <expr> <buffer> <CR> <SID>HandlePossibleSelectionEnter()
     endif
     augroup ClangComplete
       au CursorMovedI <buffer> call <SID>TriggerSnippet()
@@ -534,17 +534,17 @@ function! s:StopMonitoring()
     " Restore original return and Ctrl-Y key mappings
 
     if s:use_maparg
-      if get(s:old_cr, 'buffer', 0)
-        silent! execute s:old_cr.mode.
-            \ (s:old_cr.noremap ? 'noremap '  : 'map').
-            \ (s:old_cr.buffer  ? '<buffer> ' : '').
-            \ (s:old_cr.expr    ? '<expr> '   : '').
-            \ (s:old_cr.nowait  ? '<nowait> ' : '').
-            \ s:old_cr.lhs.' '.
-            \ substitute(s:old_cr.rhs, '<SID>', '<SNR>'.s:old_cr.sid.'_', 'g')
-      else
-        silent! iunmap <buffer> <CR>
-      endif
+      " if get(s:old_cr, 'buffer', 0)
+        " silent! execute s:old_cr.mode.
+        "     \ (s:old_cr.noremap ? 'noremap '  : 'map').
+        "     \ (s:old_cr.buffer  ? '<buffer> ' : '').
+        "     \ (s:old_cr.expr    ? '<expr> '   : '').
+        "     \ (s:old_cr.nowait  ? '<nowait> ' : '').
+        "     \ s:old_cr.lhs.' '.
+        "     \ substitute(s:old_cr.rhs, '<SID>', '<SNR>'.s:old_cr.sid.'_', 'g')
+      " else
+        " silent! iunmap <buffer> <CR>
+      " endif
     else
       silent! execute substitute(g:clang_restore_cr_imap, '<SID>', s:old_snr, 'g')
     endif
@@ -561,6 +561,7 @@ function! s:StopMonitoring()
 endfunction
 
 function! s:TriggerSnippet()
+  " execute 'inoremap <script> <buffer> <silent> <CR> '.s:old_cr
   " Dont bother doing anything until we're sure the user exited the menu
   if !b:snippet_chosen
     return
